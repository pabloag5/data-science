plotK<-rect.hclust(ddg,k=5)
plot(ddg)
plotK<-rect.hclust(ddg,k=5)
plot(ddg)
#defining number of k
customersGroups<-cutree(ddg,k=5) #5 clusters
plotK<-rect.hclust(ddg,k=5)
Kclusters<-kmeans(clusterData,centers = 5, nstart = 20)
Kclusters
Kclusters<-kmeans(clusterData,centers = 3, nstart = 20)
Kclusters
Kclusters<-kmeans(clusterData,centers = 4, nstart = 20)
Kclusters
plot(ddg)
plot(ddg, hang = -1)
library(cluster)
#defining number of k
customersGroups<-cutree(ddg,k=5) #5 clusters
customersGroups
#Silhouette Plot
plot(silhouette(customersGroups, distMX))
#Silhouette Plot
plot(silhouette(Kclusters$cluster, distMX))
#K means cluster
Kclusters<-kmeans(clusterData,centers = 5, nstart = 20)
#Silhouette Plot
plot(silhouette(Kclusters$cluster, distMX))
#K means cluster
Kclusters<-kmeans(clusterData,centers = 3, nstart = 20)
#Silhouette Plot
plot(silhouette(Kclusters$cluster, distMX))
#defining number of k
customersGroups<-cutree(ddg,k=3) #5 clusters
plot(silhouette(customersGroups, distMX))
Kclusters
#K means cluster
Kclusters<-kmeans(clusterData,centers = 5, nstart = 20)
Kclusters
#K means cluster
Kclusters<-kmeans(clusterData,centers = 4, nstart = 20)
Kclusters
ggplot(customersData,mapping = aes(x=Food.Dog, y=Medical.treat.Dog)) +
geom_point()
ggplot(customersData,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point()
ggplot(customersData,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(group_by(Kclusters$cluster))
ggplot(customersData,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(groups(Kclusters$cluster))
ggplot(customersData,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=Kclusters$cluster)
ggplot(customersData,mapping = aes(x=Food.Dog, y=PLATINO.PP)) +
geom_point(color=Kclusters$cluster)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=PLATINO.PP)) +
geom_point(color=Kclusters$cluster)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=Kclusters$cluster)
#K means cluster
Kclusters<-kmeans(clusterData,centers = 3, nstart = 20)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=Kclusters$cluster)
#K means cluster
Kclusters<-kmeans(clusterData,centers = 2, nstart = 20)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=Kclusters$cluster)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=based_segment)
View(customersDataTrans)
geom_point(color="based_segment"")
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=customersDataTrans$based_segment)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=customersDataTrans$based_segment)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=Kclusters$cluster)
#Silhouette Plot
plot(silhouette(Kclusters$cluster, distMX))
#K means cluster
Kclusters<-kmeans(clusterData,centers = 3, nstart = 20)
View(pca.data2)
View(pca.data2)
View(clusterData)
View(clusterData)
View(clusterData)
View(clusterData)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=Kclusters$cluster)
#K means cluster
Kclusters<-kmeans(clusterData,centers = 3, nstart = 20)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=customersDataTrans$based_segment)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(group=customersDataTrans$based_segment)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=customersDataTrans$based_segment)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical.treatment.Dog)) +
geom_point(color=Kclusters$cluster)
#K means cluster
Kclusters<-kmeans(clusterData,centers = 4, nstart = 20)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical)) +
geom_point(color=Kclusters$cluster)
#K means cluster
Kclusters<-kmeans(clusterData,centers = 3, nstart = 20)
table(Kclusters$cluster,customersData$based_segment)
table(customersGroups,customersData$based_segment)
ggplot(customersDataTrans,mapping = aes(x=Food.Dog, y=Medical)) +
geom_point(color=customersGroups)
#defining number of k
Hclusters<-cutree(ddg,k=3) #3 clusters
table(Hclusters, Kclusters$cluster)
install.packages("gridExtra")
library(gridExtra)
library(grid)
grid.arrange(p1,p2,p3,p4,p5,ncol=3)
p1<-ggplot(customersData, mapping = aes(x=customersData$Food.Dog)) +
geom_histogram()
p2<-ggplot(customersData, mapping = aes(x=customersData$Food.Cat)) +
geom_histogram()
p3<-ggplot(customersData, mapping = aes(x=customersData$Medical.treatment.Dog)) +
geom_histogram()
p4<-ggplot(customersData, mapping = aes(x=customersData$Snacks)) +
geom_histogram()
p5<-ggplot(customersData, mapping = aes(x=customersData$Medical)) +
geom_histogram()
grid.arrange(p1,p2,p3,p4,p5,ncol=3)
p1<-ggplot(customersData, mapping = aes(x=customersData$Food.Dog)) +
geom_histogram() + xlab("Regular Dog Food")
p2<-ggplot(customersData, mapping = aes(x=customersData$Food.Cat)) +
geom_histogram() + xlab("Regular Cat Food")
p3<-ggplot(customersData, mapping = aes(x=customersData$Medical.treatment.Dog)) +
geom_histogram() + xlab("Medical Treatment Food")
p4<-ggplot(customersData, mapping = aes(x=customersData$Snacks)) +
geom_histogram() + xlab("Snacks")
p5<-ggplot(customersData, mapping = aes(x=customersData$Medical)) +
geom_histogram() + xlab("Medications")
grid.arrange(p1,p2,p3,p4,p5,ncol=3)
p1<-ggplot(customersData, mapping = aes(x=customersData$Food.Dog)) +
geom_histogram() + xlab("Regular Dog Food")
p2<-ggplot(customersData, mapping = aes(x=customersData$Food.Cat)) +
geom_histogram() + xlab("Regular Cat Food")
p3<-ggplot(customersData, mapping = aes(x=customersData$Medical.treatment.Dog)) +
geom_histogram() + xlab("Medical Treatment Food")
p4<-ggplot(customersData, mapping = aes(x=customersData$Snacks)) +
geom_histogram() + xlab("Snacks")
p5<-ggplot(customersData, mapping = aes(x=customersData$Medical)) +
geom_histogram() + xlab("Medications")
grid.arrange(p1,p2,p3,p4,p5,ncol=3, top="Variable Distribution")
lp1<-ggplot(customersData, mapping = aes(x=log1p(customersData$Food.Dog))) +
geom_histogram() + xlab("Regular Dog Food")
lp2<-ggplot(customersData, mapping = aes(x=log1p(customersData$Food.Cat))) +
geom_histogram() + xlab("Regular Cat Food")
lp3<-ggplot(customersData, mapping = aes(x=log1p(customersData$Medical.treatment.Dog))) +
geom_histogram() + xlab("Medical treatment Food")
lp4<-ggplot(customersData, mapping = aes(x=log1p(customersData$Snacks))) +
geom_histogram() + xlab("Snacks")
lp5<-ggplot(customersData, mapping = aes(x=log1p(customersData$Medical))) +
geom_histogram() + xlab("Medication")
grid.arrange(p1,p2,p3,p4,p5,ncol=3, top="Logarithm transformation")
lp1<-ggplot(customersData, mapping = aes(x=log1p(customersData$Food.Dog))) +
geom_histogram() + xlab("Regular Dog Food")
lp2<-ggplot(customersData, mapping = aes(x=log1p(customersData$Food.Cat))) +
geom_histogram() + xlab("Regular Cat Food")
lp3<-ggplot(customersData, mapping = aes(x=log1p(customersData$Medical.treatment.Dog))) +
geom_histogram() + xlab("Medical treatment Food")
lp4<-ggplot(customersData, mapping = aes(x=log1p(customersData$Snacks))) +
geom_histogram() + xlab("Snacks")
lp5<-ggplot(customersData, mapping = aes(x=log1p(customersData$Medical))) +
geom_histogram() + xlab("Medication")
grid.arrange(lp1,lp2,lp3,lp4,lp5,ncol=3, top="Logarithm transformation")
cp1<-ggplot(customersData, mapping = aes(x=GENERAL)) +
geom_histogram() + xlab("GENERAL CATEGORY")
cp2<-ggplot(customersData, mapping = aes(x=VIP)) +
geom_histogram() + xlab("VIP CATEGORY")
cp3<-ggplot(customersData, mapping = aes(x=DORADO)) +
geom_histogram() + xlab("DORADO PORTFOLIO")
cp4<-ggplot(customersData, mapping = aes(x=EQUINO)) +
geom_histogram() + xlab("EQUINO PORTFOLIO")
cp5<-ggplot(customersData, mapping = aes(x=ESTELAR)) +
geom_histogram() + xlab("ESTELAR PORTFOLIO")
cp6<-ggplot(customersData, mapping = aes(x=PLATINO)) +
geom_histogram() + xlab("PLATINO PORTFOLIO")
grid.arrange(cp1,cp2,cp3,cp4,cp5,cp6, ncol=3, top="Inventory variables")
select(c("VIP.PP")) %>% print(30)
select(customersData,one_of(c("VIP.PP", "DORADO.PP", "EQUINO.PP", "ESTELAR.PP", "PLATINO.PP"))) %>% print(30)
fviz_pca_ind(pca.var,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,     # Avoid text overlapping
geom = c("point"),
axes = c(1,2)
)
pca.data<-customersDataTrans[,1:5]
pca.var<-prcomp(pca.data, scale. = T)
fviz_pca_ind(pca.var,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,     # Avoid text overlapping
geom = c("point"),
axes = c(1,2)
)
fviz_pca_var(pca.var,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,     # Avoid text overlapping
axes = c(1,2)
)
fviz_pca_biplot(pca.var, repel = TRUE,
col.var = "#2E9FDF", # Variables color
col.ind = "#696969",  # Individuals color
geom = c("point")
)
Kclusters
cp1<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Food.Cat, color=Kclusters$cluster)) +
geom_dotplot()
cp1<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Food.Cat, color=Kclusters$cluster)) +
geom_point()
cp1
names(customersDataTrans)
cp1<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Food.Cat, color=Kclusters$cluster)) +
geom_point()
cp2<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Medical.treatment.Dog, color=Kclusters$cluster)) +
geom_point()
cp3<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Snacks, color=Kclusters$cluster)) +
geom_point()
cp4<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Medical, color=Kclusters$cluster)) +
geom_point()
cp5<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=VIP.PP, color=Kclusters$cluster)) +
geom_point()
cp6<-ggplot(customersDataTrans, mapping = aes(x=Medical.treatment.Dog, y=PLATINO.PP, color=Kclusters$cluster)) +
geom_point()
cp7<-ggplot(customersDataTrans, mapping = aes(x=Medical, y=ESTELAR.PP, color=Kclusters$cluster)) +
geom_point()
cp8<-ggplot(customersDataTrans, mapping = aes(x=Food.Cat, y=DORADO.PP, color=Kclusters$cluster)) +
geom_point()
grid.arrange(cp1, cp2, cp3,cp4, cp5, cp6, cp7, cp8, ncol=2, top="Clusters distribution")
#Differences between clusters and segmentation
table(Kclusters$cluster,customersData$based_segment)
names(customersDataTrans)
cp1<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Food.Cat, color=Kclusters$cluster)) +
geom_point()
cp1<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Food.Cat, color=Kclusters$cluster)) +
geom_point()
cp2<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Medical.treatment.Dog, color=Kclusters$cluster)) +
geom_point()
cp3<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Snacks, color=Kclusters$cluster)) +
geom_point()
cp4<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=Medical, color=Kclusters$cluster)) +
geom_point()
cp5<-ggplot(customersDataTrans, mapping = aes(x=Food.Dog, y=VIP.PP, color=Kclusters$cluster)) +
geom_point()
cp6<-ggplot(customersDataTrans, mapping = aes(x=Medical.treatment.Dog, y=PLATINO.PP, color=Kclusters$cluster)) +
geom_point()
cp7<-ggplot(customersDataTrans, mapping = aes(x=Medical, y=ESTELAR.PP, color=Kclusters$cluster)) +
geom_point()
cp8<-ggplot(customersDataTrans, mapping = aes(x=Food.Cat, y=DORADO.PP, color=Kclusters$cluster)) +
geom_point()
grid.arrange(cp1, cp2, cp3,cp4, cp5, cp6, cp7, cp8, ncol=2, top="Clusters distribution")
View(Customers_sales)
cp1<-ggplot(customersDataTrans,
aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Food.Cat, color=Kclusters$cluster)) +
geom_point()
View(cp8)
View(Kclusters)
View(cp1)
cp1<-ggplot(customersDataTrans, aes(x=customersDataTrans$Food.Dog,
y=customersDataTrans$Food.Cat)) +
geom_point(aes(colour=Kclusters$cluster)) + geom_text(aes(label = label), size = 6, colour = "white")
cp2<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Medical.treatment.Dog )) +
geom_point(aes(color=Kclusters$cluster))
cp3<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Snacks, color=Kclusters$cluster)) +
geom_point()
cp4<-ggplot(customersDataTrans,
mapping = aes(x=Food.Dog, y=customersDataTrans$Medical, color=Kclusters$cluster)) +
geom_point()
cp5<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$VIP.PP, color=Kclusters$cluster)) +
geom_point()
cp6<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical.treatment.Dog, y=customersDataTrans$PLATINO.PP, color=Kclusters$cluster)) +
geom_point()
cp7<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical, y=customersDataTrans$ESTELAR.PP, color=Kclusters$cluster)) +
geom_point()
cp8<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Cat, y=customersDataTrans$DORADO.PP, color=Kclusters$cluster)) +
geom_point()
grid.arrange(cp1, cp2, cp3,cp4, cp5, cp6, cp7, cp8, ncol=2, top="Clusters distribution")
cp1<-ggplot(customersDataTrans, aes(x=customersDataTrans$Food.Dog,
y=customersDataTrans$Food.Cat)) +
geom_point(aes(colour=Kclusters$cluster))
cp2<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Medical.treatment.Dog )) +
geom_point(aes(color=Kclusters$cluster))
cp3<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Snacks, color=Kclusters$cluster)) +
geom_point()
cp4<-ggplot(customersDataTrans,
mapping = aes(x=Food.Dog, y=customersDataTrans$Medical, color=Kclusters$cluster)) +
geom_point()
cp5<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$VIP.PP, color=Kclusters$cluster)) +
geom_point()
cp6<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical.treatment.Dog, y=customersDataTrans$PLATINO.PP, color=Kclusters$cluster)) +
geom_point()
cp7<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical, y=customersDataTrans$ESTELAR.PP, color=Kclusters$cluster)) +
geom_point()
cp8<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Cat, y=customersDataTrans$DORADO.PP, color=Kclusters$cluster)) +
geom_point()
grid.arrange(cp1, cp2, cp3,cp4, cp5, cp6, cp7, cp8, ncol=2, top="Clusters distribution")
#find the structure of the datasets
glimpse(Customers_sales)
glimpse(info_customers)
glimpse(Portfolio_vip_standar)
glimpse(Portfolio_vip_standar)
glimpse(customersData)
summary(customersData)
summary(customersData$based_segment)
summary(customersData$based_segment)
head(customersData$total_spend)
p1<-ggplot(customersData, mapping = aes(x=customersData$Food.Dog)) +
geom_histogram() + xlab("Regular Dog Food")
p2<-ggplot(customersData, mapping = aes(x=customersData$Food.Cat)) +
geom_histogram() + xlab("Regular Cat Food")
p3<-ggplot(customersData, mapping = aes(x=customersData$Medical.treatment.Dog)) +
geom_histogram() + xlab("Medical Treatment Food")
p4<-ggplot(customersData, mapping = aes(x=customersData$Snacks)) +
geom_histogram() + xlab("Snacks")
p5<-ggplot(customersData, mapping = aes(x=customersData$Medical)) +
geom_histogram() + xlab("Medications")
grid.arrange(p1,p2,p3,p4,p5,ncol=3, top="Variable Distribution")
lp1<-ggplot(customersData, mapping = aes(x=log1p(customersData$Food.Dog))) +
geom_histogram() + xlab("Regular Dog Food")
lp2<-ggplot(customersData, mapping = aes(x=log1p(customersData$Food.Cat))) +
geom_histogram() + xlab("Regular Cat Food")
lp3<-ggplot(customersData, mapping = aes(x=log1p(customersData$Medical.treatment.Dog))) +
geom_histogram() + xlab("Medical treatment Food")
lp4<-ggplot(customersData, mapping = aes(x=log1p(customersData$Snacks))) +
geom_histogram() + xlab("Snacks")
lp5<-ggplot(customersData, mapping = aes(x=log1p(customersData$Medical))) +
geom_histogram() + xlab("Medication")
grid.arrange(lp1,lp2,lp3,lp4,lp5,ncol=3, top="Logarithm transformation")
cp1<-ggplot(customersData, mapping = aes(x=GENERAL)) +
geom_histogram() + xlab("GENERAL CATEGORY")
cp2<-ggplot(customersData, mapping = aes(x=VIP)) +
geom_histogram() + xlab("VIP CATEGORY")
cp3<-ggplot(customersData, mapping = aes(x=DORADO)) +
geom_histogram() + xlab("DORADO PORTFOLIO")
cp4<-ggplot(customersData, mapping = aes(x=EQUINO)) +
geom_histogram() + xlab("EQUINO PORTFOLIO")
cp5<-ggplot(customersData, mapping = aes(x=ESTELAR)) +
geom_histogram() + xlab("ESTELAR PORTFOLIO")
cp6<-ggplot(customersData, mapping = aes(x=PLATINO)) +
geom_histogram() + xlab("PLATINO PORTFOLIO")
grid.arrange(cp1,cp2,cp3,cp4,cp5,cp6, ncol=3, top="Inventory variables")
glimpse(customersDataTrans)
pca.data<-customersDataTrans[,1:5]
pca.var<-prcomp(pca.data, scale. = T)
fviz_pca_ind(pca.var,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,     # Avoid text overlapping
geom = c("point"),
axes = c(1,2)
)
fviz_pca_var(pca.var,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,     # Avoid text overlapping
axes = c(1,2)
)
fviz_pca_biplot(pca.var, repel = TRUE,
col.var = "#2E9FDF", # Variables color
col.ind = "#696969",  # Individuals color
geom = c("point")
)
#code to define how many components to use.
pca.var_stdDev<-pca.var$sdev
pca.var_var<-pca.var_stdDev^2
pca.var_explain<-pca.var_var/sum(pca.var_var)
#pca.var_explain
plot(pca.var_explain,type = "b")
glimpse(clusterData)
glimpse(customersDataTrans)
clusterData<-customersDataTrans %>% select(-one_of(c("based_segment", "region")))
glimpse(clusterData)
#Hierarchical cluster
distMX<-dist(clusterData,method = "euclidean")
#dendogram
ddg<-hclust(distMX)
plot(ddg, hang = -1)
#defining number of k
Hclusters<-cutree(ddg,k=3) #3 clusters
rect.hclust(ddg,k=3)
#K means cluster
Kclusters<-kmeans(clusterData,centers = 3, nstart = 20)
Kclusters
table(Hclusters, Kclusters$cluster)
cp1<-ggplot(customersDataTrans, aes(x=customersDataTrans$Food.Dog,
y=customersDataTrans$Food.Cat)) +
geom_point(aes(colour=Kclusters$cluster))
cp2<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Medical.treatment.Dog )) +
geom_point(aes(color=Kclusters$cluster))
cp3<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Snacks, color=Kclusters$cluster)) +
geom_point()
cp4<-ggplot(customersDataTrans,
mapping = aes(x=Food.Dog, y=customersDataTrans$Medical, color=Kclusters$cluster)) +
geom_point()
cp5<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$VIP.PP, color=Kclusters$cluster)) +
geom_point()
cp6<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical.treatment.Dog, y=customersDataTrans$PLATINO.PP, color=Kclusters$cluster)) +
geom_point()
cp7<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical, y=customersDataTrans$ESTELAR.PP, color=Kclusters$cluster)) +
geom_point()
cp8<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Cat, y=customersDataTrans$DORADO.PP, color=Kclusters$cluster)) +
geom_point()
grid.arrange(cp1, cp2, cp3,cp4, cp5, cp6, cp7, cp8, ncol=2, top="Clusters distribution")
#Differences between clusters and segmentation
table(Kclusters$cluster,customersData$based_segment)
kp1<-ggplot(customersDataTrans, aes(x=customersDataTrans$Food.Dog,
y=customersDataTrans$Food.Cat)) +
geom_point(colour=Kclusters$cluster)
kp2<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Medical.treatment.Dog,color=Kclusters$cluster )) +
geom_point()
kp3<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Snacks, color=Kclusters$cluster)) +
geom_point()
kp4<-ggplot(customersDataTrans,
mapping = aes(x=Food.Dog, y=customersDataTrans$Medical, color=Kclusters$cluster)) +
geom_point()
kp5<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$VIP.PP, color=Kclusters$cluster)) +
geom_point()
kp6<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical.treatment.Dog, y=customersDataTrans$PLATINO.PP, color=Kclusters$cluster)) +
geom_point()
kp7<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical, y=customersDataTrans$ESTELAR.PP, color=Kclusters$cluster)) +
geom_point()
kp8<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Cat, y=customersDataTrans$DORADO.PP, color=Kclusters$cluster)) +
geom_point()
grid.arrange(kp1, kp2, kp3,kp4, kp5, kp6, kp7, kp8, ncol=2, top="Clusters distribution")
kp1<-ggplot(customersDataTrans, aes(x=customersDataTrans$Food.Dog,
y=customersDataTrans$Food.Cat, colour=Kclusters$cluster)) +
geom_point()
kp2<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Medical.treatment.Dog,color=Kclusters$cluster )) +
geom_point()
kp3<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Snacks, color=Kclusters$cluster)) +
geom_point()
kp4<-ggplot(customersDataTrans,
mapping = aes(x=Food.Dog, y=customersDataTrans$Medical, color=Kclusters$cluster)) +
geom_point()
kp5<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$VIP.PP, color=Kclusters$cluster)) +
geom_point()
kp6<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical.treatment.Dog, y=customersDataTrans$PLATINO.PP, color=Kclusters$cluster)) +
geom_point()
kp7<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical, y=customersDataTrans$ESTELAR.PP, color=Kclusters$cluster)) +
geom_point()
kp8<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Cat, y=customersDataTrans$DORADO.PP, color=Kclusters$cluster)) +
geom_point()
grid.arrange(kp1, kp2, kp3,kp4, kp5, kp6, kp7, kp8, ncol=2, top="Clusters distribution")
kp1<-ggplot(customersDataTrans, aes(x=customersDataTrans$Food.Dog,
y=customersDataTrans$Food.Cat, colour=Kclusters$cluster)) +
geom_point()
kp2<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Medical.treatment.Dog,color=Kclusters$cluster )) +
geom_point()
kp3<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$Snacks, color=Kclusters$cluster)) +
geom_point()
kp4<-ggplot(customersDataTrans,
mapping = aes(x=Food.Dog, y=customersDataTrans$Medical, color=Kclusters$cluster)) +
geom_point()
kp5<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Dog, y=customersDataTrans$VIP.PP, color=Kclusters$cluster)) +
geom_point()
kp6<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical.treatment.Dog, y=customersDataTrans$PLATINO.PP, color=Kclusters$cluster)) +
geom_point()
kp7<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Medical, y=customersDataTrans$ESTELAR.PP, color=Kclusters$cluster)) +
geom_point()
kp8<-ggplot(customersDataTrans,
mapping = aes(x=customersDataTrans$Food.Cat, y=customersDataTrans$DORADO.PP, color=Kclusters$cluster)) +
geom_point()
kp1
kp2
kp3
kp4
kp5
kp6
kp7
kp8
#grid.arrange(kp1, kp2, kp3,kp4, kp5, kp6, kp7, kp8, ncol=2, top="Clusters distribution")
