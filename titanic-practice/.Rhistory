setwd("~/Data-Science/R-Projects/data-science/titanic-practice")
source('~/Data-Science/R-Projects/data-science/titanic-practice/titanic-ml.R', echo=TRUE)
warnings()
#explore the ticket feature
str(Ticket
)
#explore the ticket feature
str(Ticket)
#explore the ticket feature
str(combined.data$Ticket)
combined.data$Ticket[1:20,]
combined.data[1:20,]$Ticket
combined.data$Ticket[1:20]
ticket.first.char<-substr(combined.data$Ticket,0,1)
unique(ticket.first.char)
combined.data$ticketFirstChar<-as.factor(ticket.first.char)
ggplot(combined.data[1:891,],aes(x=ticketFirstChar)) +
geom_bar(banwidth=5) +
facet_wrap(~Pclass)
ggplot(combined.data[1:891,],aes(x=ticketFirstChar, fill=Survived)) +
geom_bar(banwidth=5) +
facet_wrap(~Pclass) +
xlab("TicketChar") +
ylab("count") +
ggtitle("Ticket first Char by Pclass")
ggplot(combined.data[1:891,],aes(x=ticketFirstChar, fill=Survived)) +
geom_bar(banwidth=5) +
facet_wrap(~Pclass+Sex) +
xlab("TicketChar") +
ylab("count") +
ggtitle("Ticket first Char by Pclass")
combined.data[1:20,"Ticket" "ticketFirstChar"]
combined.data[1:20,"Ticket" + "ticketFirstChar"]
combined.data[1:20,"Ticket","ticketFirstChar"]
combined.data[1:20,"Ticket":"ticketFirstChar"]
combined.data[1:20,"Ticket"]
combined.data[1:20,"Ticket,Pclass"]
combined.data[1:20,"Ticket+Pclass"]
combined.data[1:20,("Ticket","ticketFirstChar")]
combined.data[1:20,("Ticket" "ticketFirstChar")]
combined.data[1:20,("Ticket" "Pclass")]
combined.data[1:20,("Ticket" & "Pclass")]
combined.data[1:20,"Ticket" & "Pclass"]
#explore the fare feature
ggplot(combined.data[1:891,], aes(x=Fare)) +
geom_histogram()
#explore the fare feature
ggplot(combined.data[1:891,], aes(x=Fare)) +
geom_histogram() +
facet_wrap(~Pclass)
#explore the fare feature
ggplot(combined.data[1:891,], aes(x=Fare)) +
geom_histogram() +
facet_wrap(~Pclass) +
xlim(300)
#explore the fare feature
ggplot(combined.data[1:891,], aes(x=Fare)) +
geom_histogram() +
facet_wrap(~Pclass) +
xlim(0,300)
#explore the cabin feature
str(combined.data$Cabin)
combined.data$Cabin[1:100,]
combined.data$Cabin[1:100]
combined.data[which(combined.data$Cabin==""),"Cabin"]
combined.data[which(combined.data$Cabin==""),"Cabin"]<-"U"
combined.data[which(combined.data$Cabin==""),"Cabin"]
combined.data$Cabin[1:100]
combined.data$cabinFirstChar<-substr(combined.data$Cabin,0,1)
combined.data$cabinFirstChar[1:100]
levels(combined.data$cabinFirstChar)
combined.data$cabinFirstChar<-as.factor(combined.data$cabinFirstChar)
levels(combined.data$cabinFirstChar)
ggplot(combined.data[1:891,], aes(x=cabinFirstChar, fill=Survived)) +
geom_bar() +
ggtitle("cabin survivability")
ggplot(combined.data[1:891,], aes(x=cabinFirstChar, fill=Survived)) +
geom_bar() +
ggtitle("cabin survivability") +
ylim(0,100)
ggplot(combined.data[1:891,], aes(x=cabinFirstChar, fill=Survived)) +
geom_bar() +
ggtitle("cabin survivability") +
ylim(0,75)
ggplot(combined.data[1:891,], aes(x=cabinFirstChar, fill=Survived)) +
geom_bar() +
ggtitle("cabin survivability") +
ylim(0,60)
ggplot(combined.data[1:891,], aes(x=cabinFirstChar, fill=Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("cabin survivability") +
ylim(0,60)
ggplot(combined.data[1:891,], aes(x=cabinFirstChar, fill=Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("cabin survivability")
ggplot(combined.data[1:891,], aes(x=cabinFirstChar, fill=Survived)) +
geom_bar() +
facet_wrap(~Pclass+Sex) +
ggtitle("cabin survivability")
combined.data$multipleCabin<-as.factor(ifelse(str_detect(combined.data$Cabin," "),"Y","N"))
summary(combined.data$multipleCabin)
ggplot(combined.data[1:891,], aes(x=multipleCabin,fill=Survived)) +
geom_bar() +
ggtitle("multiple cabins survivavility")
ggplot(combined.data[1:891,], aes(x=multipleCabin,fill=Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("multiple cabins survivavility")
ggplot(combined.data[1:891,], aes(x=multipleCabin,fill=Survived)) +
geom_bar() +
facet_wrap(~FamilySize) +
ggtitle("multiple cabins survivavility")
ggplot(combined.data[1:891,], aes(x=multipleCabin,fill=Survived)) +
geom_bar() +
facet_wrap(~FamilySize) +
ggtitle("multiple cabins survivability")
ggplot(combined.data[1:891,], aes(x=multipleCabin,fill=Survived)) +
geom_bar() +
facet_wrap(~FamilySize) +
ylim(0,20) +
ggtitle("multiple cabins survivability")
ggplot(combined.data[1:891,], aes(x=multipleCabin,fill=Survived)) +
geom_bar() +
facet_wrap(~FamilySize) +
ylim(0,10) +
ggtitle("multiple cabins survivability")
#explore embarked feature
str(combined.data$Embarked)
ggplot(combined.data[1:891,], aes(x=Embarked, fill=Survived)) +
geom_bar()
ggplot(combined.data[1:891,], aes(x=Embarked, fill=Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("Embarked Survivability")
ggplot(combined.data[1:891,], aes(x=Embarked, fill=Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("Embarked Survivability")
install.packages("randomForest")
library(randomForest)
combined.data[1:20, c("Cabin", "cabinFirstChar")]
rf.train.1<-combined.data[1:891,c("Pclass","Title")]
rf.label<-as.factor(train$Survived)
set.seed(1234) #to always have the same parameter
rf.1<-randomForest(x=rf.train.1,y=rf.label,importance = TRUE, ntree = 1000) #default ntree is 500
rf.1
varImpPlot(rf.1)
#train a randomForest using Pclass, Title, SibSp
rf.train.2<-combined.data[1:891,c("Pclass", "Title", "SibSp")]
rf.train.2<-combined.data[1:891,c("Pclass", "Title", "SibSp")]
set.seed(1234)
rf.2<-randomForest(x=rf.train.2, y=rf.label, importance = TRUE, ntree=1000)
rf.2
varImpPlot(rf.2)
rf.train.3<-combined.data[1:891,c("Pclass","Title", "Parch")]
set.seed(1234)
rf.3<-randomForest(x=rf.train.3, y=rf.label, importance = TRUE, ntree=1000)
rf.3
varImpPlot(rf.3)
rf.train.4<-combined.data[1:891, c("Pclass", "Title", "SibSp", "Parch")]
set.seed(1234)
rf.4<-randomForest(x=rf.train.4, y=rf.label, importance = TRUE, ntree=1000)
rf.4
varImpPlot(rf.4)
rf.train.5<-combined.data[1:891,c("Pclass", "title", "FamilySize")]
set.seed(1234)
rf.5<-randomForest(x=rf.train.5, y=rf.label, importance = TRUE, ntree=1000)
rf.5
varImpPlot(rf.5)
rf.train.5<-combined.data[1:891,c("Pclass", "Title", "FamilySize")]
set.seed(1234)
rf.5<-randomForest(x=rf.train.5, y=rf.label, importance = TRUE, ntree=1000)
rf.5
varImpPlot(rf.5)
rf.train.6<-combined.data[1:891,c("Pclass", "Title", "FamilySize", "SibSp")]
set.seed(1234)
rf.6<-randomForest(x=rf.train.6, y=rf.label, importance = TRUE, ntree=1000)
rf.6
varImpPlot(rf.6)
rf.train.7<-combined.data[1:891,c("Pclass", "Title", "FamilySize", "Parch")]
set.seed(1234)
rf.7<-randomForest(x=rf.train.7, y.rf.label, importance = TRUE, ntree_1000)
rf.7
varImpPlot(rf.7)
rf.train.7<-combined.data[1:891,c("Pclass", "Title", "FamilySize", "Parch")]
set.seed(1234)
rf.7<-randomForest(x=rf.train.7, y.rf.label, importance = TRUE, ntree=1000)
rf.7
varImpPlot(rf.7)
rf.train.7<-combined.data[1:891,c("Pclass", "Title", "FamilySize", "Parch")]
set.seed(1234)
rf.7<-randomForest(x=rf.train.7, y=rf.label, importance = TRUE, ntree=1000)
rf.7
varImpPlot(rf.7)

